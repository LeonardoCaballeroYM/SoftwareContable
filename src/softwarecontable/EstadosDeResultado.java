/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package softwarecontable;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class EstadosDeResultado extends javax.swing.JFrame {
    
    

    /**
     * Creates new form EstadosDeResultado
     */
    public EstadosDeResultado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbActivoCirculante = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbTotalActivoCirculante = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbTotalActivoNoCirculante = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbActivoNoCirculante = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbActivoDiferido = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbTotalActivoDiferido = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbPasivoCirculante = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        tbTotalPasivoCirculante = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        tbPasivoNoCirculante = new javax.swing.JTable();
        jScrollPane12 = new javax.swing.JScrollPane();
        tbTotalPasivoNoCirculante = new javax.swing.JTable();
        jScrollPane13 = new javax.swing.JScrollPane();
        tbTotalCapitalGanado = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        tbCapitalGanado = new javax.swing.JTable();
        jScrollPane15 = new javax.swing.JScrollPane();
        tbCapitalContribuido = new javax.swing.JTable();
        jScrollPane16 = new javax.swing.JScrollPane();
        tbTotalCapitalContribuido = new javax.swing.JTable();
        jScrollPane17 = new javax.swing.JScrollPane();
        tbTotalActivo = new javax.swing.JTable();
        jScrollPane18 = new javax.swing.JScrollPane();
        tbTotalPasivo = new javax.swing.JTable();
        jScrollPane19 = new javax.swing.JScrollPane();
        tbTotalCapital = new javax.swing.JTable();
        jScrollPane20 = new javax.swing.JScrollPane();
        tbTotalPasivoCapital = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNombreCom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPeriodoTiempo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEstadoResultados = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombreComercial = new javax.swing.JTextField();
        txtPeriodo = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbBalanzaComprobaciÃ³n = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estados Financieros");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(44, 67, 80));

        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbActivoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbActivoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Activo", "Circulante"
            }
        ));
        jScrollPane3.setViewportView(tbActivoCirculante);
        if (tbActivoCirculante.getColumnModel().getColumnCount() > 0) {
            tbActivoCirculante.getColumnModel().getColumn(0).setResizable(false);
            tbActivoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbActivoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbActivoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane4.setBorder(null);
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalActivoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalActivoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                        Total Activo Circulante", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tbTotalActivoCirculante);
        if (tbTotalActivoCirculante.getColumnModel().getColumnCount() > 0) {
            tbTotalActivoCirculante.getColumnModel().getColumn(0).setResizable(false);
            tbTotalActivoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalActivoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalActivoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalActivoNoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalActivoNoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                 Total Activo No Circulante", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tbTotalActivoNoCirculante);
        if (tbTotalActivoNoCirculante.getColumnModel().getColumnCount() > 0) {
            tbTotalActivoNoCirculante.getColumnModel().getColumn(0).setResizable(false);
            tbTotalActivoNoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalActivoNoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalActivoNoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane6.setBorder(null);
        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbActivoNoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbActivoNoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Activo", "No Circulante"
            }
        ));
        jScrollPane6.setViewportView(tbActivoNoCirculante);
        if (tbActivoNoCirculante.getColumnModel().getColumnCount() > 0) {
            tbActivoNoCirculante.getColumnModel().getColumn(0).setResizable(false);
            tbActivoNoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbActivoNoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbActivoNoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane7.setBorder(null);
        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbActivoDiferido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbActivoDiferido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Activo", "Diferido"
            }
        ));
        jScrollPane7.setViewportView(tbActivoDiferido);
        if (tbActivoDiferido.getColumnModel().getColumnCount() > 0) {
            tbActivoDiferido.getColumnModel().getColumn(0).setResizable(false);
            tbActivoDiferido.getColumnModel().getColumn(1).setMinWidth(100);
            tbActivoDiferido.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbActivoDiferido.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane8.setBorder(null);
        jScrollPane8.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane8.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalActivoDiferido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalActivoDiferido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                             Total Activo Diferido", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tbTotalActivoDiferido);
        if (tbTotalActivoDiferido.getColumnModel().getColumnCount() > 0) {
            tbTotalActivoDiferido.getColumnModel().getColumn(0).setResizable(false);
            tbTotalActivoDiferido.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalActivoDiferido.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalActivoDiferido.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane9.setBorder(null);
        jScrollPane9.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbPasivoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbPasivoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Pasivo", "Circulante"
            }
        ));
        jScrollPane9.setViewportView(tbPasivoCirculante);
        if (tbPasivoCirculante.getColumnModel().getColumnCount() > 0) {
            tbPasivoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbPasivoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbPasivoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane10.setBorder(null);
        jScrollPane10.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane10.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalPasivoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalPasivoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                        Total Pasivo Circulante", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tbTotalPasivoCirculante);
        if (tbTotalPasivoCirculante.getColumnModel().getColumnCount() > 0) {
            tbTotalPasivoCirculante.getColumnModel().getColumn(0).setResizable(false);
            tbTotalPasivoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalPasivoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalPasivoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane11.setBorder(null);
        jScrollPane11.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane11.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbPasivoNoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbPasivoNoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Pasivo", "No Circulante"
            }
        ));
        jScrollPane11.setViewportView(tbPasivoNoCirculante);
        if (tbPasivoNoCirculante.getColumnModel().getColumnCount() > 0) {
            tbPasivoNoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbPasivoNoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbPasivoNoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane12.setBorder(null);
        jScrollPane12.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane12.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalPasivoNoCirculante.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalPasivoNoCirculante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                        Total Pasivo No Circulante", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tbTotalPasivoNoCirculante);
        if (tbTotalPasivoNoCirculante.getColumnModel().getColumnCount() > 0) {
            tbTotalPasivoNoCirculante.getColumnModel().getColumn(0).setResizable(false);
            tbTotalPasivoNoCirculante.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalPasivoNoCirculante.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalPasivoNoCirculante.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane13.setBorder(null);
        jScrollPane13.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane13.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalCapitalGanado.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalCapitalGanado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                              Total Capital Ganado", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(tbTotalCapitalGanado);
        if (tbTotalCapitalGanado.getColumnModel().getColumnCount() > 0) {
            tbTotalCapitalGanado.getColumnModel().getColumn(0).setResizable(false);
            tbTotalCapitalGanado.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalCapitalGanado.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalCapitalGanado.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane14.setBorder(null);
        jScrollPane14.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane14.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbCapitalGanado.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbCapitalGanado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Capital", "Ganado"
            }
        ));
        jScrollPane14.setViewportView(tbCapitalGanado);
        if (tbCapitalGanado.getColumnModel().getColumnCount() > 0) {
            tbCapitalGanado.getColumnModel().getColumn(1).setMinWidth(100);
            tbCapitalGanado.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbCapitalGanado.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane15.setBorder(null);
        jScrollPane15.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane15.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbCapitalContribuido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbCapitalContribuido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Capital", "Contribuido"
            }
        ));
        jScrollPane15.setViewportView(tbCapitalContribuido);
        if (tbCapitalContribuido.getColumnModel().getColumnCount() > 0) {
            tbCapitalContribuido.getColumnModel().getColumn(1).setMinWidth(100);
            tbCapitalContribuido.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbCapitalContribuido.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane16.setBorder(null);
        jScrollPane16.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane16.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalCapitalContribuido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalCapitalContribuido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                              Total Capital Contribuido", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane16.setViewportView(tbTotalCapitalContribuido);
        if (tbTotalCapitalContribuido.getColumnModel().getColumnCount() > 0) {
            tbTotalCapitalContribuido.getColumnModel().getColumn(0).setResizable(false);
            tbTotalCapitalContribuido.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalCapitalContribuido.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalCapitalContribuido.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane17.setBorder(null);
        jScrollPane17.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane17.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalActivo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalActivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                                                           Total de  Activo", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane17.setViewportView(tbTotalActivo);
        if (tbTotalActivo.getColumnModel().getColumnCount() > 0) {
            tbTotalActivo.getColumnModel().getColumn(0).setResizable(false);
            tbTotalActivo.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalActivo.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalActivo.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane18.setBorder(null);
        jScrollPane18.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane18.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalPasivo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalPasivo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                                                              Total de Pasivo", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane18.setViewportView(tbTotalPasivo);
        if (tbTotalPasivo.getColumnModel().getColumnCount() > 0) {
            tbTotalPasivo.getColumnModel().getColumn(0).setResizable(false);
            tbTotalPasivo.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalPasivo.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalPasivo.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane19.setBorder(null);
        jScrollPane19.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane19.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalCapital.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalCapital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                                                                   Total Capital", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane19.setViewportView(tbTotalCapital);
        if (tbTotalCapital.getColumnModel().getColumnCount() > 0) {
            tbTotalCapital.getColumnModel().getColumn(0).setResizable(false);
            tbTotalCapital.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalCapital.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalCapital.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        jScrollPane20.setBorder(null);
        jScrollPane20.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane20.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbTotalPasivoCapital.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tbTotalPasivoCapital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"                                                    Total Pasivo + Capital", null}
            },
            new String [] {
                "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane20.setViewportView(tbTotalPasivoCapital);
        if (tbTotalPasivoCapital.getColumnModel().getColumnCount() > 0) {
            tbTotalPasivoCapital.getColumnModel().getColumn(0).setResizable(false);
            tbTotalPasivoCapital.getColumnModel().getColumn(1).setMinWidth(100);
            tbTotalPasivoCapital.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbTotalPasivoCapital.getColumnModel().getColumn(1).setMaxWidth(100);
        }

        btnGuardar.setText("Guardar");

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre Comercial:");

        txtNombreCom.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Balance General");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("PerÃ­odo:");

        txtPeriodoTiempo.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(77, 77, 77)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPeriodoTiempo))
                            .addComponent(txtNombreCom, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(53, 53, 53))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombreCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(txtPeriodoTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane18, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane19, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane20, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGuardar)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Balance General", jPanel1);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbEstadoResultados.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        tbEstadoResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Ventas brutas", null, null, null, null},
                {"(-) Descuentos s/venta", null, null, null, null},
                {"(-) Rebajas s/venta", null, null, null, null},
                {"(-) Devoluciones s/venta", null, null, null, null},
                {"(=) Ventas Netas", null, null, null, null},
                {"(-) Costo de venta", null, null, null, null},
                {"(=) Utilidad Bruta", null, null, null, null},
                {"(-) Gasto de venta", null, null, null, null},
                {"(-) Gastos de administraciÃ³n", null, null, null, null},
                {"(=) Utlidad antes de OpreraciÃ³n ", null, null, null, null},
                {"(-) Gastos de operaciÃ³n", null, null, null, null},
                {"(-) Otros gastos", null, null, null, null},
                {"+/- Costo Integral del Finaanciamiento", null, null, null, null},
                {"(=) Utilidad antes de Impuesto", null, null, null, null},
                {"(-) ISR", null, null, null, null},
                {"(-) PTU", null, null, null, null},
                {"(=) Utlidad o PÃ©rdida del ejercicio", null, null, null, null},
                {"", null, null, null, null},
                {"Resultado del ejercicio", null, null, null, null}
            },
            new String [] {
                "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbEstadoResultados.setRowHeight(20);
        jScrollPane1.setViewportView(tbEstadoResultados);
        if (tbEstadoResultados.getColumnModel().getColumnCount() > 0) {
            tbEstadoResultados.getColumnModel().getColumn(0).setResizable(false);
            tbEstadoResultados.getColumnModel().getColumn(1).setMinWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(1).setPreferredWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(1).setMaxWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(2).setMinWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(2).setPreferredWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(2).setMaxWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(3).setMinWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(3).setPreferredWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(3).setMaxWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(4).setMinWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(4).setPreferredWidth(130);
            tbEstadoResultados.getColumnModel().getColumn(4).setMaxWidth(130);
        }

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Nombre Comercial:");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setText("PerÃ­odo o fecha:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Estado de Resultados");

        txtNombreComercial.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        txtPeriodo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 952, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombreComercial, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
                                    .addComponent(txtPeriodo))))))
                .addGap(25, 25, 25))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreComercial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Estado De Resultado", jPanel2);

        jLabel32.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Balanza de comprobaciÃ³n");

        jLabel33.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel33.setText("Nombre del negocio:");

        jTextField18.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        jLabel34.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel34.setText("PerÃ­odo:");

        jTextField19.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        tbBalanzaComprobaciÃ³n.setFont(new java.awt.Font("Century Gothic", 0, 13)); // NOI18N
        tbBalanzaComprobaciÃ³n.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "", null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "NÃºmero", "Nombre de la cuenta", "Deudor", "Acreedor", "Deudor", "Acreedor"
            }
        ));
        tbBalanzaComprobaciÃ³n.setRowHeight(20);
        jScrollPane2.setViewportView(tbBalanzaComprobaciÃ³n);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel32)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 952, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jLabel32)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Balanza De ComprobaciÃ³n", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        // Un modelo de datos que hace la primera columna (la de
        // la cabecera lateral) no editable.
        DefaultTableModel tm = new DefaultTableModel(10, 5) {
            @Override
            public boolean isCellEditable(int row, int column) {
                if (0 == column) {
                    return false;
                }
                return super.isCellEditable(row, column);
            }
        };

        // Titulos para la cabecera superior. El primero es vacio,
        // puesto que corresponde
        tm.setColumnIdentifiers(new String[]{"", "", "", "", ""});

        // Valores para la primera columna, que es la cabecera lateral.
        for (int i = 0; i < 10; i++) {
            tm.setValueAt(i + 1, i, 0);
        }

        // JTable al que se le pasa el modelo recien creado y se
        // sobreescribe el metodo changeSelection para que no permita
        // seleccionar la primera columna.
        JTable t = new JTable(tm) {
            @Override
            public void changeSelection(int rowIndex, int columnIndex,
                    boolean toggle, boolean extend) {
                if (columnIndex == 0) {
                    super.changeSelection(rowIndex, columnIndex + 1, toggle,
                            extend);
                } else {
                    super.changeSelection(rowIndex, columnIndex, toggle,
                            extend);
                }
            }
        };

        // Se pone a la primera columna el render del JTableHeader
        // superior.
        t.getColumnModel().getColumn(0).setCellRenderer(
                t.getTableHeader().getDefaultRenderer());
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstadosDeResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstadosDeResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstadosDeResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstadosDeResultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstadosDeResultado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane18;
    private javax.swing.JScrollPane jScrollPane19;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane20;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTable tbActivoCirculante;
    private javax.swing.JTable tbActivoDiferido;
    private javax.swing.JTable tbActivoNoCirculante;
    private javax.swing.JTable tbBalanzaComprobaciÃ³n;
    private javax.swing.JTable tbCapitalContribuido;
    private javax.swing.JTable tbCapitalGanado;
    private javax.swing.JTable tbEstadoResultados;
    private javax.swing.JTable tbPasivoCirculante;
    private javax.swing.JTable tbPasivoNoCirculante;
    private javax.swing.JTable tbTotalActivo;
    private javax.swing.JTable tbTotalActivoCirculante;
    private javax.swing.JTable tbTotalActivoDiferido;
    private javax.swing.JTable tbTotalActivoNoCirculante;
    private javax.swing.JTable tbTotalCapital;
    private javax.swing.JTable tbTotalCapitalContribuido;
    private javax.swing.JTable tbTotalCapitalGanado;
    private javax.swing.JTable tbTotalPasivo;
    private javax.swing.JTable tbTotalPasivoCapital;
    private javax.swing.JTable tbTotalPasivoCirculante;
    private javax.swing.JTable tbTotalPasivoNoCirculante;
    private javax.swing.JTextField txtNombreCom;
    private javax.swing.JTextField txtNombreComercial;
    private javax.swing.JTextField txtPeriodo;
    private javax.swing.JTextField txtPeriodoTiempo;
    // End of variables declaration//GEN-END:variables
}
